name: Build IntelliJ Platform Plugin
on:
  pull_request:
  workflow_dispatch:

jobs:

  # Run Gradle Wrapper Validation Action to verify the wrapper's checksum
  gradleValidation:
    name: Gradle Wrapper
    runs-on: ubuntu-latest
    steps:

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v3.2.0

      # Validate wrapper
      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1.0.5

  # Run verifyPlugin and test Gradle tasks
  test:
    name: Test IntelliJ Plugin
    needs: gradleValidation
    runs-on: ubuntu-latest
    steps:

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v3.2.0

      # Setup Java 11 environment for the next steps
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 11

      # Cache Gradle dependencies
      - name: Setup Cache
        uses: actions/cache@v3.2.2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-

      # Run ktlint
      - name: Run Linters
        run: ./Plugins/IntelliJ/gradlew -p ./Plugins/IntelliJ/ ktlintCheck 

      # Run verifyPlugin Gradle task
      - name: Verify Plugin
        run: ./Plugins/IntelliJ/gradlew -p ./Plugins/IntelliJ/ verifyPlugin


  build:
    name: Build IntelliJ Plugin
    needs: test
    runs-on: ubuntu-latest
    outputs:
      name: ${{ steps.properties.outputs.name }}
      version: ${{ steps.properties.outputs.version }}
      artifact: ${{ steps.properties.outputs.name }}-${{ steps.properties.outputs.version }}.zip
      changelog: ${{ steps.properties.outputs.changelog }}
    steps:

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v3.2.0

      # Setup Java 11 environment for the next steps
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 11

      # Cache Gradle dependencies
      - name: Setup Cache
        uses: actions/cache@v3.2.2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-

      # Build artifact using buildPlugin Gradle task
      - name: Build Plugin
        run: ./Plugins/IntelliJ/gradlew -p ./Plugins/IntelliJ/ buildPlugin

      # Run test Gradle task
      - name: Run Tests
        run: ./Plugins/IntelliJ/gradlew -p ./Plugins/IntelliJ/ test

      # Upload plugin artifact to make it available in the next jobs
      - name: Upload artifact
        uses: actions/upload-artifact@v3.1.1
        with:
          name: plugin-artifact
          path: ./Plugins/IntelliJ/build/distributions/${{ needs.build.outputs.artifact }}

  # Verify built plugin using IntelliJ Plugin Verifier tool
  # Requires build job to be passed
  verify:
    name: Verify
    needs: build
    runs-on: ubuntu-latest
    steps:

      # Download plugin artifact provided by the previous job
      - name: Download Artifact
        uses: actions/download-artifact@v3.0.1
        with:
          name: plugin-artifact

      # Run IntelliJ Plugin Verifier action using GitHub Action
      - name: Verify Plugin
        id: verify
        uses: ChrisCarini/intellij-platform-plugin-verifier-action@v2.0.0
        with:
          plugin-location: plugin-artifact/${{ needs.build.outputs.artifact }}
          ide-versions: |
            ideaIC:2022.3

      # Print the output of the verify step
      - name: Print Logs
        env:
          OUTPUT_LOG: ${{ steps.verify.outputs.verification-output-log-filename }}
        run: |
          echo "The verifier log file [$OUTPUT_LOG] contents : " ;
          cat $OUTPUT_LOG
